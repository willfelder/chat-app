{"version":3,"sources":["firebase.js","components/SidebarChat/index.js","StateProvider.js","components/Sidebar/index.js","components/Chat/index.js","image/backgroundwa.png","reducer.js","components/Login/index.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarChat","id","name","addNewChat","useState","seed","setSeed","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","onClick","roomName","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","rooms","setRooms","user","unsubscribe","photoURL","IconButton","placeholder","type","room","Chat","input","setInput","roomId","useParams","setRoomName","Date","length","timestamp","toDate","toUTCString","displayName","onChange","e","target","preventDefault","console","log","FieldValue","serverTimestamp","actionTypes","state","action","Login","dispatch","alt","style","backgroundSize","backgroundPosition","backgroundImage","whatsappbackground","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7edda750.chunk.js","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBKoZ9LRsNSSJDhRBVV046UZv_tAcmJ9Ik\",\r\n    authDomain: \"whats-app-clone-c48b1.firebaseapp.com\",\r\n    projectId: \"whats-app-clone-c48b1\",\r\n    storageBucket: \"whats-app-clone-c48b1.appspot.com\",\r\n    messagingSenderId: \"406272321035\",\r\n    appId: \"1:406272321035:web:e6a65b3afc5c8870c7090e\",\r\n    measurementId: \"G-V9P8KFVCDF\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebaseApp.firestore();\r\n  const auth = firebase.auth();\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export { auth, provider };\r\n  export default db;","import React, {useEffect, useState} from 'react';\r\nimport './SidebarChat.css';\r\nimport { Avatar } from '@material-ui/core';\r\nimport db from '../../firebase';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction SidebarChat({ id, name, addNewChat }) {\r\n\r\n    const [seed, setSeed] = useState('');\r\n    const [ messages, setMessages] = useState('');\r\n\r\n    useEffect(() => {\r\n        if(id) {\r\n            db.collection('rooms')\r\n              .doc(id)\r\n              .collection('messages')\r\n              .orderBy('timestamp', 'desc')\r\n              .onSnapshot((snapshot) => \r\n                 setMessages(snapshot.docs.map((doc) => \r\n                 doc.data()))\r\n              )\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000))\r\n    }, [id])\r\n\r\n    const createChat = () => {\r\n        const roomName = prompt('Please enter name for chat room');\r\n\r\n        if(roomName) {\r\n            // do some clever database stuff...\r\n            db.collection('rooms').add({\r\n                name: roomName,\r\n            });\r\n        }\r\n    };\r\n\r\n    return !addNewChat ? (\r\n        <Link to={`/rooms/${id}`}>\r\n          <div className=\"sidebarChat\">\r\n              <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n               <div className=\"sidebarChat_info\">\r\n                  <h2>{name}</h2>\r\n                  <p>{messages[0]?.message}</p>\r\n               </div>\r\n           </div>\r\n        </Link>\r\n\r\n    ) : (\r\n        <div onClick={createChat} className='sidebarChat'>\r\n            <h2>Add new Chat</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SidebarChat","import React, { createContext, useContext, useReducer } from 'react';\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n    <StateContext.Provider value={useReducer (reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Avatar, IconButton } from '@material-ui/core';\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SidebarChat from '../SidebarChat/index';\r\nimport db from '../../firebase';\r\nimport { useStateValue } from '../../StateProvider';\r\n\r\nimport './Sidebar.css';\r\n\r\nfunction Sidebar() {\r\n\r\n    const [rooms, setRooms] = useState([]);\r\n    const [{user}, dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = db.collection('rooms').onSnapshot((snapshot) => \r\n            setRooms(\r\n                snapshot.docs.map((doc) => ({\r\n                    id: doc.id,\r\n                    data: doc.data(),\r\n                }))\r\n                )\r\n       )\r\n\r\n       return () => {\r\n           unsubscribe();\r\n       };\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n\r\n            <div className=\"sidebar_header\">\r\n                <Avatar src={user?.photoURL} />\r\n                <div className=\"sidebar_headerRight\">\r\n                   <IconButton>\r\n                        <DonutLargeIcon />\r\n                   </IconButton>\r\n                   <IconButton>\r\n                        <ChatIcon />\r\n                   </IconButton>\r\n                   <IconButton>\r\n                       <MoreVertIcon />\r\n                   </IconButton>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar_search\">\r\n                <div className=\"sidebar_searchContainer\">\r\n                     <SearchIcon />\r\n                     <input placeholder=\"Search or start new chat\" type=\"text\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar_chats\">\r\n                <SidebarChat addNewChat />\r\n                {rooms.map(room => (\r\n                    <SidebarChat key={room.id} id={room.id} name={room.data.name} />\r\n                ))}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;","import React, {useState, useEffect} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Avatar, IconButton } from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport db from '../../firebase';\r\nimport firebase from 'firebase';\r\nimport { useStateValue } from '../../StateProvider';\r\nimport './Chat.css';\r\n\r\nfunction Chat() {\r\n    \r\n    const [seed, setSeed] = useState('');\r\n    const [input, setInput] = useState('');\r\n    const { roomId } = useParams();\r\n    const [roomName, setRoomName] = useState();\r\n    const [messages, setMessages] = useState([]);\r\n    const [{ user }, dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n\r\n        if (roomId) {\r\n            db.collection('rooms')\r\n              .doc(roomId)\r\n              .onSnapshot((snapshot) => setRoomName(snapshot.data().name));\r\n\r\n\r\n            db.collection('rooms')\r\n              .doc(roomId)\r\n              .collection('messages')\r\n              .orderBy('timestamp', 'asc')\r\n              .onSnapshot((snapshot) => setMessages(snapshot.docs.map((doc) => doc.data()))\r\n                );\r\n\r\n        }\r\n    }, [roomId])\r\n\r\n    useEffect(() => {\r\n\r\n        setSeed(Math.floor(Math.random() * 5000 ));\r\n    }, [roomId]);\r\n\r\n    const sendMessage = (e) => {\r\n        \r\n        e.preventDefault();\r\n        console.log('You typed >>', input);\r\n\r\n        db.collection('rooms').doc(roomId).collection('messages').add({\r\n            message: input,\r\n            name: user.displayName,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n\r\n        setInput('');\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n\r\n            <div className=\"chat_header\">\r\n               <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n\r\n                <div className=\"chat_headerInfo\">\r\n                    <h3>{roomName}</h3>\r\n                    <p>Last seen{' '}\r\n                      {new Date(messages[messages.length - 1]?.timestamp?.toDate()).toUTCString()}\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"chat_headerRight\">\r\n                   <IconButton>\r\n                        <DonutLargeIcon />\r\n                   </IconButton>\r\n                   <IconButton>\r\n                        <ChatIcon />\r\n                   </IconButton>\r\n                   <IconButton>\r\n                       <MoreVertIcon />\r\n                   </IconButton>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"chat_body\">\r\n                {messages.map((message) => (\r\n                    <p className={`chat_message ${message.name === user.displayName && 'chat_reciever'}`}>\r\n                    <span className=\"chat_name\">{message.name}</span>\r\n                    {message.message}\r\n                    <span className=\"chat_timestamp\">\r\n                        {new Date(message.timestamp?.toDate()).toUTCString()}\r\n                    </span>\r\n                </p>\r\n                ))}               \r\n            </div>\r\n\r\n            <div className=\"chat_footer\">\r\n               <InsertEmoticonIcon />\r\n               <form>\r\n                   <input value={input} onChange={(e) => setInput(e.target.value)} \r\n                   type=\"text\" placeholder=\"Type a message\" />\r\n                   <button onClick={sendMessage} type=\"submit\">Send a Message</button>\r\n               </form>\r\n               <MicIcon />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat","export default __webpack_public_path__ + \"static/media/backgroundwa.cd68ebfd.png\";","\r\n// The initialState is how the data layer looks, when the app starts up\r\nexport const initialState = {\r\n    user: null,\r\n};\r\n\r\n// The actionTypes is where you can push information into the data layer\r\nexport const actionTypes = {\r\n    SET_USER: 'SET_USER',\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    console.log(action);\r\n    switch(action.type) {\r\n        case actionTypes.SET_USER: \r\n            return {\r\n                ...state, //keep the state of the data layer\r\n                user: action.user, //but change the user to be whatever we dispatch\r\n            };\r\n\r\n            default:\r\n                return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport './Login.css';\r\nimport whatsappbackground from '../../image/backgroundwa.png';\r\nimport { auth, provider } from '../../firebase';\r\nimport { actionTypes } from '../../reducer';\r\nimport { useStateValue } from '../../StateProvider';\r\n\r\nfunction Login() {\r\n\r\n    const [{}, dispatch] = useStateValue();\r\n\r\n    const signIn = () => {\r\n        auth\r\n            .signInWithPopup(provider)\r\n            .then((result) => {\r\n                dispatch({\r\n                    type: actionTypes.SET_USER,\r\n                    user: result.user,\r\n                })\r\n            })\r\n            .catch((error) => alert(error.message));\r\n    };\r\n\r\n    return (\r\n\r\n        <section className=\"login\" alt=\"Whatsapp Background\" style={{\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n            backgroundImage: `url(${whatsappbackground})`\r\n\r\n        }}>\r\n\r\n            <div className=\"login_container\">            \r\n\r\n                <div className=\"login_text\">\r\n                    <h1>Whatsapp Web Clone</h1>\r\n                    <p>This app is not commercialized or monetized. It was created only to study the technology React.\r\n                    <br /><br /> All rights reserved for WhatsApp LLC © 2021</p>\r\n                </div>\r\n\r\n                <Button onClick={signIn}>\r\n                    Sign in with Google\r\n                </Button>\r\n            </div>\r\n\r\n        </section>\r\n\r\n    )\r\n}\r\n\r\nexport default Login;","import React, { useState } from 'react';\nimport './App.css';\nimport Sidebar from './components/Sidebar/index';\nimport Chat from './components/Chat/index';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Login from './components/Login/index';\nimport { useStateValue } from './StateProvider';\n\n\nfunction App() {\n\n  const [ { user }, dispatch] = useStateValue();\n\n  return (\n    <div className=\"app\">\n\n      {!user ? (\n        <Login />\n      ) : (\n\n        <div className=\"app_body\">       \n        <Router>\n          <Sidebar />\n            <Switch>\n  \n            <Route path=\"/rooms/:roomId\">\n               <Chat />\n            </Route>\n             \n             <Route path=\"/\">\n                <Chat />\n             </Route>\n  \n          </Switch>\n        </Router>\n        </div>\n\n      )}\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n//import * as serviceWorker from './serviceWorker';\nimport reducer, { initialState } from './reducer';\nimport { StateProvider } from './StateProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n         <App />\n    </StateProvider>  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}